// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_prueba.Models;

#nullable disable

namespace Proyecto_prueba.Migrations
{
    [DbContext(typeof(PruebafContext))]
    [Migration("20240624202813_UpdatePasswordLength")]
    partial class UpdatePasswordLength
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto_prueba.Models.Carrito", b =>
                {
                    b.Property<int>("CarritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("carrito_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarritoId"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("pedido_id");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("producto_id");

                    b.HasKey("CarritoId")
                        .HasName("PK__Carrito__8647FB090E55830F");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Carrito", (string)null);
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoria_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("nombre")
                        .IsFixedLength();

                    b.HasKey("CategoriaId")
                        .HasName("PK__Categori__DB875A4F91CBEF45");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Favorito", b =>
                {
                    b.Property<int>("FavoritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("favorito_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoritoId"));

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("producto_id");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("FavoritoId")
                        .HasName("PK__Favorito__B8BA20CA7FD28327");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Favoritos");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.HistorialVisita", b =>
                {
                    b.Property<int>("HistorialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("historial_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistorialId"));

                    b.Property<DateTime?>("FechaVisita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_visita")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("producto_id");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("HistorialId")
                        .HasName("PK__Historia__68FE18EED1CDEEFF");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HistorialVisitas");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pedido_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"));

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("PedidoId")
                        .HasName("PK__Pedidos__CBE76076632BEF93");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.ProdCat", b =>
                {
                    b.Property<int>("ProdcatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("prodcat_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdcatId"));

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoria_id");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("producto_id");

                    b.HasKey("ProdcatId")
                        .HasName("PK__ProdCat__BC99016BC13050F3");

                    b.HasIndex("CategoriaId");

                    b.HasIndex(new[] { "ProductoId", "CategoriaId" }, "UQ__ProdCat__16E49B49E9BFD403")
                        .IsUnique()
                        .HasFilter("[producto_id] IS NOT NULL AND [categoria_id] IS NOT NULL");

                    b.ToTable("ProdCat", (string)null);
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("producto_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<string>("Categoria")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("categoria");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<byte[]>("ImagenProducto")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("imagen_producto");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<int?>("PorcentajeDescuento")
                        .HasColumnType("int")
                        .HasColumnName("porcentaje_descuento");

                    b.Property<int?>("PorcentajeGanancia")
                        .HasColumnType("int")
                        .HasColumnName("porcentaje_ganancia");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("price");

                    b.Property<int?>("ValorDescuento")
                        .HasColumnType("int")
                        .HasColumnName("valor_descuento");

                    b.Property<int?>("ValorGanancia")
                        .HasColumnType("int")
                        .HasColumnName("valor_ganancia");

                    b.HasKey("ProductoId")
                        .HasName("PK__Producto__FB5CEEECE9AC0D6B");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Proveedore", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("proveedor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedorId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("nombre")
                        .IsFixedLength();

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefono");

                    b.HasKey("ProveedorId")
                        .HasName("PK__Proveedo__88BBADA4059C4F8E");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("stock_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockId"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("color");

                    b.Property<DateOnly>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("PrecioIngresado")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio_ingresado");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("producto_id");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int")
                        .HasColumnName("proveedor_id");

                    b.Property<string>("Talle")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("talle")
                        .IsFixedLength();

                    b.HasKey("StockId")
                        .HasName("PK__Stock__E86668626ABB0D1B");

                    b.HasIndex("ProductoId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Stock", (string)null);
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Usuario", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Contraseña")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Email")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Rol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("rol");

                    b.HasKey("IdUser")
                        .HasName("PK__usuarios__D2D146375F65DDD3");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Carrito", b =>
                {
                    b.HasOne("Proyecto_prueba.Models.Pedido", "Pedido")
                        .WithMany("Carritos")
                        .HasForeignKey("PedidoId")
                        .IsRequired()
                        .HasConstraintName("FK__Carrito__pedido___59FA5E80");

                    b.HasOne("Proyecto_prueba.Models.Producto", "Producto")
                        .WithMany("Carritos")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK__Carrito__product__5AEE82B9");

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Favorito", b =>
                {
                    b.HasOne("Proyecto_prueba.Models.Producto", "Producto")
                        .WithMany("Favoritos")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("FK__Favoritos__produ__619B8048");

                    b.HasOne("Proyecto_prueba.Models.Usuario", "Usuario")
                        .WithMany("Favoritos")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Favoritos__usuar__60A75C0F");

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.HistorialVisita", b =>
                {
                    b.HasOne("Proyecto_prueba.Models.Producto", "Producto")
                        .WithMany("HistorialVisita")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("FK__Historial__produ__66603565");

                    b.HasOne("Proyecto_prueba.Models.Usuario", "Usuario")
                        .WithMany("HistorialVisita")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Historial__usuar__656C112C");

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Pedido", b =>
                {
                    b.HasOne("Proyecto_prueba.Models.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Pedidos__usuario__571DF1D5");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.ProdCat", b =>
                {
                    b.HasOne("Proyecto_prueba.Models.Categoria", "Categoria")
                        .WithMany("ProdCats")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("FK__ProdCat__categor__4316F928");

                    b.HasOne("Proyecto_prueba.Models.Producto", "Producto")
                        .WithMany("ProdCats")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("FK__ProdCat__product__4222D4EF");

                    b.Navigation("Categoria");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Stock", b =>
                {
                    b.HasOne("Proyecto_prueba.Models.Producto", "Producto")
                        .WithMany("Stocks")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK__Stock__producto___48CFD27E");

                    b.HasOne("Proyecto_prueba.Models.Proveedore", "Proveedor")
                        .WithMany("Stocks")
                        .HasForeignKey("ProveedorId")
                        .IsRequired()
                        .HasConstraintName("FK__Stock__proveedor__49C3F6B7");

                    b.Navigation("Producto");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Categoria", b =>
                {
                    b.Navigation("ProdCats");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Pedido", b =>
                {
                    b.Navigation("Carritos");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Producto", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("Favoritos");

                    b.Navigation("HistorialVisita");

                    b.Navigation("ProdCats");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Proveedore", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Proyecto_prueba.Models.Usuario", b =>
                {
                    b.Navigation("Favoritos");

                    b.Navigation("HistorialVisita");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
